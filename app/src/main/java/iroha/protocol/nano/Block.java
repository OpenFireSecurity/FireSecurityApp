// Generated by the protocol buffer compiler.  DO NOT EDIT!

package iroha.protocol.nano;

@SuppressWarnings("hiding")
public interface Block {

  public static final class Header extends
      com.google.protobuf.nano.MessageNano {

    private static volatile Header[] _emptyArray;
    public static Header[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Header[0];
          }
        }
      }
      return _emptyArray;
    }

    // uint64 created_time = 1;
    public long createdTime;

    // repeated .iroha.protocol.Signature signatures = 2;
    public iroha.protocol.nano.Primitive.Signature[] signatures;

    public Header() {
      clear();
    }

    public Header clear() {
      createdTime = 0L;
      signatures = iroha.protocol.nano.Primitive.Signature.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.createdTime != 0L) {
        output.writeUInt64(1, this.createdTime);
      }
      if (this.signatures != null && this.signatures.length > 0) {
        for (int i = 0; i < this.signatures.length; i++) {
          iroha.protocol.nano.Primitive.Signature element = this.signatures[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.createdTime != 0L) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
            .computeUInt64Size(1, this.createdTime);
      }
      if (this.signatures != null && this.signatures.length > 0) {
        for (int i = 0; i < this.signatures.length; i++) {
          iroha.protocol.nano.Primitive.Signature element = this.signatures[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      return size;
    }

    @Override
    public Header mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 8: {
            this.createdTime = input.readUInt64();
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.signatures == null ? 0 : this.signatures.length;
            iroha.protocol.nano.Primitive.Signature[] newArray =
                new iroha.protocol.nano.Primitive.Signature[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.signatures, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new iroha.protocol.nano.Primitive.Signature();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new iroha.protocol.nano.Primitive.Signature();
            input.readMessage(newArray[i]);
            this.signatures = newArray;
            break;
          }
        }
      }
    }

    public static Header parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Header(), data);
    }

    public static Header parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Header().mergeFrom(input);
    }
  }

  public static final class Transaction extends
      com.google.protobuf.nano.MessageNano {

    public static final class Payload extends
        com.google.protobuf.nano.MessageNano {

      private static volatile Payload[] _emptyArray;
      public static Payload[] emptyArray() {
        // Lazily initializes the empty array
        if (_emptyArray == null) {
          synchronized (
              com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
            if (_emptyArray == null) {
              _emptyArray = new Payload[0];
            }
          }
        }
        return _emptyArray;
      }

      // repeated .iroha.protocol.Command commands = 1;
      public iroha.protocol.nano.Commands.Command[] commands;

      // string creator_account_id = 2;
      public String creatorAccountId;

      // uint64 tx_counter = 3;
      public long txCounter;

      // uint64 created_time = 4;
      public long createdTime;

      public Payload() {
        clear();
      }

      public Payload clear() {
        commands = iroha.protocol.nano.Commands.Command.emptyArray();
        creatorAccountId = "";
        txCounter = 0L;
        createdTime = 0L;
        cachedSize = -1;
        return this;
      }

      @Override
      public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
          throws java.io.IOException {
        if (this.commands != null && this.commands.length > 0) {
          for (int i = 0; i < this.commands.length; i++) {
            iroha.protocol.nano.Commands.Command element = this.commands[i];
            if (element != null) {
              output.writeMessage(1, element);
            }
          }
        }
        if (!this.creatorAccountId.equals("")) {
          output.writeString(2, this.creatorAccountId);
        }
        if (this.txCounter != 0L) {
          output.writeUInt64(3, this.txCounter);
        }
        if (this.createdTime != 0L) {
          output.writeUInt64(4, this.createdTime);
        }
        super.writeTo(output);
      }

      @Override
      protected int computeSerializedSize() {
        int size = super.computeSerializedSize();
        if (this.commands != null && this.commands.length > 0) {
          for (int i = 0; i < this.commands.length; i++) {
            iroha.protocol.nano.Commands.Command element = this.commands[i];
            if (element != null) {
              size += com.google.protobuf.nano.CodedOutputByteBufferNano
                .computeMessageSize(1, element);
            }
          }
        }
        if (!this.creatorAccountId.equals("")) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeStringSize(2, this.creatorAccountId);
        }
        if (this.txCounter != 0L) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64Size(3, this.txCounter);
        }
        if (this.createdTime != 0L) {
          size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeUInt64Size(4, this.createdTime);
        }
        return size;
      }

      @Override
      public Payload mergeFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              return this;
            default: {
              if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
                return this;
              }
              break;
            }
            case 10: {
              int arrayLength = com.google.protobuf.nano.WireFormatNano
                  .getRepeatedFieldArrayLength(input, 10);
              int i = this.commands == null ? 0 : this.commands.length;
              iroha.protocol.nano.Commands.Command[] newArray =
                  new iroha.protocol.nano.Commands.Command[i + arrayLength];
              if (i != 0) {
                System.arraycopy(this.commands, 0, newArray, 0, i);
              }
              for (; i < newArray.length - 1; i++) {
                newArray[i] = new iroha.protocol.nano.Commands.Command();
                input.readMessage(newArray[i]);
                input.readTag();
              }
              // Last one without readTag.
              newArray[i] = new iroha.protocol.nano.Commands.Command();
              input.readMessage(newArray[i]);
              this.commands = newArray;
              break;
            }
            case 18: {
              this.creatorAccountId = input.readString();
              break;
            }
            case 24: {
              this.txCounter = input.readUInt64();
              break;
            }
            case 32: {
              this.createdTime = input.readUInt64();
              break;
            }
          }
        }
      }

      public static Payload parseFrom(byte[] data)
          throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
        return com.google.protobuf.nano.MessageNano.mergeFrom(new Payload(), data);
      }

      public static Payload parseFrom(
              com.google.protobuf.nano.CodedInputByteBufferNano input)
          throws java.io.IOException {
        return new Payload().mergeFrom(input);
      }
    }

    private static volatile Transaction[] _emptyArray;
    public static Transaction[] emptyArray() {
      // Lazily initializes the empty array
      if (_emptyArray == null) {
        synchronized (
            com.google.protobuf.nano.InternalNano.LAZY_INIT_LOCK) {
          if (_emptyArray == null) {
            _emptyArray = new Transaction[0];
          }
        }
      }
      return _emptyArray;
    }

    // .iroha.protocol.Transaction.Payload payload = 1;
    public iroha.protocol.nano.Block.Transaction.Payload payload;

    // repeated .iroha.protocol.Signature signature = 2;
    public iroha.protocol.nano.Primitive.Signature[] signature;

    public Transaction() {
      clear();
    }

    public Transaction clear() {
      payload = null;
      signature = iroha.protocol.nano.Primitive.Signature.emptyArray();
      cachedSize = -1;
      return this;
    }

    @Override
    public void writeTo(com.google.protobuf.nano.CodedOutputByteBufferNano output)
        throws java.io.IOException {
      if (this.payload != null) {
        output.writeMessage(1, this.payload);
      }
      if (this.signature != null && this.signature.length > 0) {
        for (int i = 0; i < this.signature.length; i++) {
          iroha.protocol.nano.Primitive.Signature element = this.signature[i];
          if (element != null) {
            output.writeMessage(2, element);
          }
        }
      }
      super.writeTo(output);
    }

    @Override
    protected int computeSerializedSize() {
      int size = super.computeSerializedSize();
      if (this.payload != null) {
        size += com.google.protobuf.nano.CodedOutputByteBufferNano
          .computeMessageSize(1, this.payload);
      }
      if (this.signature != null && this.signature.length > 0) {
        for (int i = 0; i < this.signature.length; i++) {
          iroha.protocol.nano.Primitive.Signature element = this.signature[i];
          if (element != null) {
            size += com.google.protobuf.nano.CodedOutputByteBufferNano
              .computeMessageSize(2, element);
          }
        }
      }
      return size;
    }

    @Override
    public Transaction mergeFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      while (true) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            return this;
          default: {
            if (!com.google.protobuf.nano.WireFormatNano.parseUnknownField(input, tag)) {
              return this;
            }
            break;
          }
          case 10: {
            if (this.payload == null) {
              this.payload = new iroha.protocol.nano.Block.Transaction.Payload();
            }
            input.readMessage(this.payload);
            break;
          }
          case 18: {
            int arrayLength = com.google.protobuf.nano.WireFormatNano
                .getRepeatedFieldArrayLength(input, 18);
            int i = this.signature == null ? 0 : this.signature.length;
            iroha.protocol.nano.Primitive.Signature[] newArray =
                new iroha.protocol.nano.Primitive.Signature[i + arrayLength];
            if (i != 0) {
              System.arraycopy(this.signature, 0, newArray, 0, i);
            }
            for (; i < newArray.length - 1; i++) {
              newArray[i] = new iroha.protocol.nano.Primitive.Signature();
              input.readMessage(newArray[i]);
              input.readTag();
            }
            // Last one without readTag.
            newArray[i] = new iroha.protocol.nano.Primitive.Signature();
            input.readMessage(newArray[i]);
            this.signature = newArray;
            break;
          }
        }
      }
    }

    public static Transaction parseFrom(byte[] data)
        throws com.google.protobuf.nano.InvalidProtocolBufferNanoException {
      return com.google.protobuf.nano.MessageNano.mergeFrom(new Transaction(), data);
    }

    public static Transaction parseFrom(
            com.google.protobuf.nano.CodedInputByteBufferNano input)
        throws java.io.IOException {
      return new Transaction().mergeFrom(input);
    }
  }
}
